//
// Custom background helpers
//

// Background theme light colors
@each $color, $value in $theme-colors {
  @if (theme-light-color($color)) {
    .bg-light-#{$color} {
      background-color: theme-light-color($color) !important;

      &.hoverable:hover {
        background-color: darken(theme-light-color($color), 6%) !important;
      }
    }
  }

  .bg-#{$color} {
    --bg-color: #{red($value)}, #{green($value)}, #{blue($value)};

    &.hoverable:hover {
      background-color: theme-active-color($color) !important;
    }
  }

  @if (theme-light-color($color)) {
    .bg-hover-light-#{$color} {
      cursor: pointer;

      &:hover {
        background-color: theme-light-color($color) !important;
      }
    }

    .bg-state-light-#{$color} {
      cursor: pointer;

      &.active,
      &:hover {
        background-color: theme-light-color($color) !important;
      }
    }
  }

  .bg-hover-#{$color} {
    cursor: pointer;

    &:hover {
      --bg-color: #{red($value)}, #{green($value)}, #{blue($value)};
      background-color: $value !important;
    }
  }

  .bg-active-#{$color} {
    &.active {
      --bg-color: #{red($value)}, #{green($value)}, #{blue($value)};
      background-color: $value !important;
    }
  }

  .bg-state-#{$color} {
    cursor: pointer;

    &.active,
    &:hover {
      --bg-color: #{red($value)}, #{green($value)}, #{blue($value)};
      background-color: $value !important;
    }
  }
}

// Lighten bg states
.bg-lighten {
  background-color: $lighten !important;
}

.bg-hover-lighten {
  cursor: pointer;

  &:hover {
    background-color: $lighten !important;
  }
}

.bg-active-lighten {
  &.active {
    background-color: $lighten !important;
  }
}

.bg-state-lighten {
  cursor: pointer;

  &.active,
  &:hover {
    background-color: $lighten !important;
  }
}

// Hoverable
.hoverable {
  cursor: pointer;
  transition: $transition-base;

  &:hover {
    transition: $transition-base;
  }
}
